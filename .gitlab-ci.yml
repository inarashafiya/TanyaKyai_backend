stages:
  - build
#  - test
#  - package
  - deploy

image: docker:19.03.5
services:
  - name: docker:19.03.5-dind
    command: ["--experimental"]

variables:
 RANCHER_URL_DEV: "https://194.233.73.19:9443/v3"
 RANCHER_TOKEN_DEV: "token-hnrk4:6tvn6t7g5wj7g55v7bsl9dslhbstq89vhb4mjjdgxb9qs4hrzwsqzl --context c-d7pg7:p-l94xr"
 RANCHER_URL_STAGING: "https://194.233.73.19:9443/v3"
 RANCHER_TOKEN_STAGING: "token-hnrk4:6tvn6t7g5wj7g55v7bsl9dslhbstq89vhb4mjjdgxb9qs4hrzwsqzl --context c-d7pg7:p-l94xr"
 RANCHER_URL_PRO: "https://194.233.73.19:9443/v3"
 RANCHER_TOKEN_PRO: "token-hnrk4:6tvn6t7g5wj7g55v7bsl9dslhbstq89vhb4mjjdgxb9qs4hrzwsqzl --context c-d7pg7:p-l94xr"
 IMAGE: "$CI_REGISTRY_IMAGE"
 IMAGE_VERSION: "$CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-$CI_PIPELINE_ID"
 IMAGE_TAGS: "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
 DOCKER_TLS_CERTDIR: "/certs"
 DOCKER_DRIVER: overlay2
 DOCKER_BUILDKIT: 1
 DOCKER_CLI_EXPERIMENTAL: enabled
 BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64


before_script:
    - time=$(date +%Y%m%d%H%M)

build_docker:
  stage: build
  script:
    - mkdir -p $HOME/.docker/cli-plugins/
    - wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL
    - chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
    - docker info
    - docker context create tls-environment
    - docker buildx create --name mybuilder --use tls-environment
    - cp environment .env
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker buildx build -t $IMAGE_VERSION --cache-from=type=registry,ref=$IMAGE:cache --cache-to=type=registry,ref=$IMAGE:cache,mode=max --push --progress=plain .
#    - docker push $IMAGE_VERSION
  only:
    refs:
      - dev
      - staging

build_docker_release:
  stage: build
  script:
    - mkdir -p $HOME/.docker/cli-plugins/
    - wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL
    - chmod a+x $HOME/.docker/cli-plugins/docker-buildx
    - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker info
    - docker context create tls-environment
    - docker buildx create --name mybuilder --use tls-environment
    - cp environment .env
    - docker buildx build -t $IMAGE_TAGS --cache-from=type=registry,ref=$IMAGE:cache --cache-to=type=registry,ref=$IMAGE:cache,mode=max --push --progress=plain  .
  only:
    - tags


deploy_devel:
  stage: deploy
  image: grumblex/rancher-cli-kubectl
  script:
    - rancher login  --token=$RANCHER_TOKEN_DEV  --skip-verify $RANCHER_URL_DEV
   # - rancher kubectl apply -f env-$CI_COMMIT_BRANCH.yaml
    - rancher kubectl -n tanyakyai-$CI_COMMIT_BRANCH  set image deployment $CI_PROJECT_NAME $CI_PROJECT_NAME=$IMAGE_VERSION
    - rancher kubectl -n tanyakyai-$CI_COMMIT_BRANCH rollout status  deployments $CI_PROJECT_NAME
  only:
    - dev
  environment:
   name: development

deploy_staging:
  stage: deploy
  image: grumblex/rancher-cli-kubectl
  script:
    - rancher login --token=$RANCHER_TOKEN_STAGING  $RANCHER_URL_STAGING  --skip-verify
 #   - rancher kubectl -n $CI_COMMIT_BRANCH  apply -f env-$CI_COMMIT_BRANCH.yaml
    - rancher kubectl -n tanyakyai-$CI_COMMIT_BRANCH  set image deployment $CI_PROJECT_NAME $CI_PROJECT_NAME=$IMAGE_VERSION
    - rancher kubectl -n tanyakyai-$CI_COMMIT_BRANCH rollout status  deployments $CI_PROJECT_NAME
  only:
    - staging
  environment:
   name: staging

deploy_production_release:
  stage: deploy
  image: grumblex/rancher-cli-kubectl
  script:
    - rancher login --token=$RANCHER_TOKEN_PRO  $RANCHER_URL_PRO  --skip-verify
#    - rancher kubectl -n $CI_COMMIT_BRANCH  apply -f env-$CI_COMMIT_BRANCH.yaml
    - rancher kubectl -n tanyakyai-release  set image deployment $CI_PROJECT_NAME $CI_PROJECT_NAME=$IMAGE_TAGS
    - rancher kubectl -n tanyakyai-release rollout status  deployments $CI_PROJECT_NAME
  only:
    - tags
  environment:
   name: release
